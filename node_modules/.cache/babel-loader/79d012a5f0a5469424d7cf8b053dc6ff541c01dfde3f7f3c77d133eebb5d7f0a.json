{"ast":null,"code":"var _jsxFileName = \"/Users/timothyjackreece/Desktop/fold/reposearcher/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Navbar from \"./components/Navigation/Navbar\";\n// import RepositoryInfomation from \"./components/RepositoryInfo\";\nimport Alert from \"@mui/material/Alert\";\nimport Button from \"@mui/material/Button\";\nimport axios from \"axios\";\n// import { colorArray } from \"./utility/DataGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [repos, setRepos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const getReposByOrganization = async organizationName => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`https://api.github.com/orgs/${organizationName}/repos`);\n      setIsLoading(false);\n      if (response.status === 200) {\n        setRepos(response.data);\n        setIsLoading(false);\n      } else {\n        return [];\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n    }\n  };\n  useEffect(() => {\n    (async () => {\n      await getReposByOrganization(\"Netflix\");\n    })();\n    return () => {};\n  }, []);\n  const resetDatabase = async () => {\n    await getReposByOrganization();\n    setIsError(false);\n    setIsLoading(true);\n  };\n  const handleNoResults = () => {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: resetDatabase,\n        color: \"inherit\",\n        size: \"small\",\n        children: \"RELOAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this),\n      severity: \"error\",\n      children: \"Repository not found, please press the button to the right and try another repository.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      getReposByOrganization: getReposByOrganization,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"WUK6DNRePM/uJd1v9i9umJjqOns=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Navbar","Alert","Button","axios","App","repos","setRepos","isLoading","setIsLoading","isError","setIsError","getReposByOrganization","organizationName","response","get","status","data","error","resetDatabase","handleNoResults"],"sources":["/Users/timothyjackreece/Desktop/fold/reposearcher/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Navbar from \"./components/Navigation/Navbar\";\n// import RepositoryInfomation from \"./components/RepositoryInfo\";\nimport Alert from \"@mui/material/Alert\";\nimport Button from \"@mui/material/Button\";\nimport axios from \"axios\";\n// import { colorArray } from \"./utility/DataGenerator\";\n\nfunction App() {\n  const [repos, setRepos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const getReposByOrganization = async (organizationName) => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(\n        `https://api.github.com/orgs/${organizationName}/repos`\n      );\n      setIsLoading(false);\n      if (response.status === 200) {\n        setRepos(response.data);\n        setIsLoading(false);\n      } else {\n        return [];\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      await getReposByOrganization(\"Netflix\");\n    })();\n    return () => {};\n  }, []);\n\n  const resetDatabase = async () => {\n    await getReposByOrganization();\n    setIsError(false);\n    setIsLoading(true);\n  };\n\n  const handleNoResults = () => {\n    return (\n      <Alert\n        action={\n          <Button onClick={resetDatabase} color=\"inherit\" size=\"small\">\n            RELOAD\n          </Button>\n        }\n        severity=\"error\"\n      >\n        Repository not found, please press the button to the right and try\n        another repository.\n      </Alert>\n    );\n  };\n  return (\n    <>\n      <Navbar\n        getReposByOrganization={getReposByOrganization}\n        isLoading={isLoading}\n      />\n      {/* {error && handleNoResults()} */}\n      {/* <RepositoryInfomation repositories={repos} isLoading={isLoading} /> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,gCAAgC;AACnD;AACA,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,sBAAsB,GAAG,MAAOC,gBAAgB,IAAK;IACzDJ,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC7B,+BAA8BF,gBAAiB,QAAO,CACxD;MACDJ,YAAY,CAAC,KAAK,CAAC;MACnB,IAAIK,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3BT,QAAQ,CAACO,QAAQ,CAACG,IAAI,CAAC;QACvBR,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,MAAM;QACL,OAAO,EAAE;MACX;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdT,YAAY,CAAC,KAAK,CAAC;MACnBE,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMa,sBAAsB,CAAC,SAAS,CAAC;IACzC,CAAC,GAAG;IACJ,OAAO,MAAM,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,aAAa,GAAG,YAAY;IAChC,MAAMP,sBAAsB,EAAE;IAC9BD,UAAU,CAAC,KAAK,CAAC;IACjBF,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMW,eAAe,GAAG,MAAM;IAC5B,oBACE,QAAC,KAAK;MACJ,MAAM,eACJ,QAAC,MAAM;QAAC,OAAO,EAAED,aAAc;QAAC,KAAK,EAAC,SAAS;QAAC,IAAI,EAAC,OAAO;QAAA,UAAC;MAE7D;QAAA;QAAA;QAAA;MAAA,QACD;MACD,QAAQ,EAAC,OAAO;MAAA,UACjB;IAGD;MAAA;MAAA;MAAA;IAAA,QAAQ;EAEZ,CAAC;EACD,oBACE;IAAA,uBACE,QAAC,MAAM;MACL,sBAAsB,EAAEP,sBAAuB;MAC/C,SAAS,EAAEJ;IAAU;MAAA;MAAA;MAAA;IAAA;EACrB,iBAGD;AAEP;AAAC,GA9DQH,GAAG;AAAA,KAAHA,GAAG;AAgEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}