{"ast":null,"code":"var _jsxFileName = \"/Users/timothyjackreece/Desktop/fold/reposearcher/src/components/Card/index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getCommits } from \"../../controller/controller\";\nimport Back from \"./CardGenerator/Back\";\nimport Front from \"./CardGenerator/Front\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CardMaker(_ref) {\n  _s();\n  let {\n    repoDetails,\n    isLoading\n  } = _ref;\n  const [flipped, setFlipped] = useState(false);\n  const [commitData, setCommitData] = useState([]);\n  const handleflip = async () => {\n    const formattedCommitData = [];\n    const commitInfo = await getCommits(repoDetails.full_name);\n    if (commitInfo.length > 0) {\n      commitInfo.forEach(com => {\n        const {\n          sha,\n          commit,\n          author\n        } = com;\n        formattedCommitData.push({\n          Title: commit.message,\n          Username: (author === null || author === void 0 ? void 0 : author.login) || commit.author.name,\n          Hash: sha,\n          DateCreated: new Date(commit.author.date).toLocaleString()\n        });\n      });\n    }\n    setCommitData(formattedCommitData);\n    setFlipped(!flipped);\n  };\n  const handleflipBack = () => {\n    setFlipped(false);\n  };\n  useEffect(() => {\n    if (commitData.length > 0) {\n      setFlipped(true);\n    }\n  }, [commitData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: flipped ? /*#__PURE__*/_jsxDEV(Back, {\n      name: repoDetails.repoName,\n      commitData: commitData,\n      handleflip: handleflipBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Front, {\n      name: repoDetails.repoName,\n      repoDetails: repoDetails,\n      handleflip: handleflip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CardMaker, \"Kao5Vy7HRJFdH3bwOVQrO91sC9A=\");\n_c = CardMaker;\nvar _c;\n$RefreshReg$(_c, \"CardMaker\");","map":{"version":3,"names":["useEffect","useState","getCommits","Back","Front","CardMaker","repoDetails","isLoading","flipped","setFlipped","commitData","setCommitData","handleflip","formattedCommitData","commitInfo","full_name","length","forEach","com","sha","commit","author","push","Title","message","Username","login","name","Hash","DateCreated","Date","date","toLocaleString","handleflipBack","repoName"],"sources":["/Users/timothyjackreece/Desktop/fold/reposearcher/src/components/Card/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getCommits } from \"../../controller/controller\";\nimport Back from \"./CardGenerator/Back\";\nimport Front from \"./CardGenerator/Front\";\n\nexport default function CardMaker({ repoDetails, isLoading }) {\n  const [flipped, setFlipped] = useState(false);\n  const [commitData, setCommitData] = useState([]);\n\n  const handleflip = async () => {\n    const formattedCommitData = [];\n    const commitInfo = await getCommits(repoDetails.full_name);\n    if (commitInfo.length > 0) {\n      commitInfo.forEach((com) => {\n        const { sha, commit, author } = com;\n        formattedCommitData.push({\n          Title: commit.message,\n          Username: author?.login || commit.author.name,\n          Hash: sha,\n          DateCreated: new Date(commit.author.date).toLocaleString(),\n        });\n      });\n    }\n    setCommitData(formattedCommitData);\n    setFlipped(!flipped);\n  };\n  const handleflipBack = () => {\n    setFlipped(false);\n  };\n  useEffect(() => {\n    if (commitData.length > 0) {\n      setFlipped(true);\n    }\n  }, [commitData]);\n\n  return (\n    <>\n      {flipped ? (\n        <Back\n          name={repoDetails.repoName}\n          commitData={commitData}\n          handleflip={handleflipBack}\n        />\n      ) : (\n        <Front\n          name={repoDetails.repoName}\n          repoDetails={repoDetails}\n          handleflip={handleflip}\n        />\n      )}\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,KAAK,MAAM,uBAAuB;AAAC;AAAA;AAE1C,eAAe,SAASC,SAAS,OAA6B;EAAA;EAAA,IAA5B;IAAEC,WAAW;IAAEC;EAAU,CAAC;EAC1D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,UAAU,GAAG,YAAY;IAC7B,MAAMC,mBAAmB,GAAG,EAAE;IAC9B,MAAMC,UAAU,GAAG,MAAMZ,UAAU,CAACI,WAAW,CAACS,SAAS,CAAC;IAC1D,IAAID,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;MACzBF,UAAU,CAACG,OAAO,CAAEC,GAAG,IAAK;QAC1B,MAAM;UAAEC,GAAG;UAAEC,MAAM;UAAEC;QAAO,CAAC,GAAGH,GAAG;QACnCL,mBAAmB,CAACS,IAAI,CAAC;UACvBC,KAAK,EAAEH,MAAM,CAACI,OAAO;UACrBC,QAAQ,EAAE,CAAAJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK,KAAK,KAAIN,MAAM,CAACC,MAAM,CAACM,IAAI;UAC7CC,IAAI,EAAET,GAAG;UACTU,WAAW,EAAE,IAAIC,IAAI,CAACV,MAAM,CAACC,MAAM,CAACU,IAAI,CAAC,CAACC,cAAc;QAC1D,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IACArB,aAAa,CAACE,mBAAmB,CAAC;IAClCJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EACD,MAAMyB,cAAc,GAAG,MAAM;IAC3BxB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACDT,SAAS,CAAC,MAAM;IACd,IAAIU,UAAU,CAACM,MAAM,GAAG,CAAC,EAAE;MACzBP,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,EAAE,CAACC,UAAU,CAAC,CAAC;EAEhB,oBACE;IAAA,UACGF,OAAO,gBACN,QAAC,IAAI;MACH,IAAI,EAAEF,WAAW,CAAC4B,QAAS;MAC3B,UAAU,EAAExB,UAAW;MACvB,UAAU,EAAEuB;IAAe;MAAA;MAAA;MAAA;IAAA,QAC3B,gBAEF,QAAC,KAAK;MACJ,IAAI,EAAE3B,WAAW,CAAC4B,QAAS;MAC3B,WAAW,EAAE5B,WAAY;MACzB,UAAU,EAAEM;IAAW;MAAA;MAAA;MAAA;IAAA;EAE1B,iBACA;AAEP;AAAC,GA/CuBP,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}