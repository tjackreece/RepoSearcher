{"ast":null,"code":"var _jsxFileName = \"/Users/timothyjackreece/Desktop/fold/reposearcher/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Navbar from \"./components/Navigation/Navbar\";\nimport RepositoryInfomation from \"./components/RepositoryInfo\";\nimport Alert from \"@mui/material/Alert\";\nimport Button from \"@mui/material/Button\";\nimport axios from \"axios\";\n// import { colorArray } from \"./utility/DataGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [repos, setRepos] = useState([]);\n  const [isError, setIsError] = useState(false);\n  const getReposByOrganization = async organizationName => {\n    setIsIdle(true);\n    try {\n      const response = await axios.get(`https://api.github.com/orgs/${organizationName}/repos`);\n      setIsIdle(false);\n      if (response.status === 200) {\n        setRepos(response.data);\n        setIsIdle(false);\n      } else {\n        setIsError(true);\n        return [];\n      }\n    } catch (error) {\n      setIsError(true);\n      setIsIdle(true);\n    }\n  };\n  useEffect(() => {\n    (async () => {\n      await getReposByOrganization(\"Netflix\");\n    })();\n    return () => {};\n  }, []);\n  const resetDatabase = async () => {\n    await getReposByOrganization(\"Netflix\");\n    setIsError(false);\n    setIsIdle(true);\n  };\n  const handleNoResults = () => {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: resetDatabase,\n        color: \"inherit\",\n        size: \"small\",\n        children: \"RELOAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this),\n      severity: \"error\",\n      children: \"Repository not found, please press the button to the right and try another repository.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n  const isIdle = isLoading || isError;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      getReposByOrganization: getReposByOrganization,\n      isIdle: isIdle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isError && handleNoResults(), /*#__PURE__*/_jsxDEV(RepositoryInfomation, {\n      repositories: repos,\n      isIdle: isIdle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"14XIPk8pP/M+98zq4qbdmOy2V9o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Navbar","RepositoryInfomation","Alert","Button","axios","App","repos","setRepos","isError","setIsError","getReposByOrganization","organizationName","setIsIdle","response","get","status","data","error","resetDatabase","handleNoResults","isIdle","isLoading"],"sources":["/Users/timothyjackreece/Desktop/fold/reposearcher/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Navbar from \"./components/Navigation/Navbar\";\nimport RepositoryInfomation from \"./components/RepositoryInfo\";\nimport Alert from \"@mui/material/Alert\";\nimport Button from \"@mui/material/Button\";\nimport axios from \"axios\";\n// import { colorArray } from \"./utility/DataGenerator\";\n\nfunction App() {\n  const [repos, setRepos] = useState([]);\n  const [isError, setIsError] = useState(false);\n\n  const getReposByOrganization = async (organizationName) => {\n    setIsIdle(true);\n    try {\n      const response = await axios.get(\n        `https://api.github.com/orgs/${organizationName}/repos`\n      );\n      setIsIdle(false);\n      if (response.status === 200) {\n        setRepos(response.data);\n        setIsIdle(false);\n      } else {\n        setIsError(true);\n        return [];\n      }\n    } catch (error) {\n      setIsError(true);\n      setIsIdle(true);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      await getReposByOrganization(\"Netflix\");\n    })();\n    return () => {};\n  }, []);\n\n  const resetDatabase = async () => {\n    await getReposByOrganization(\"Netflix\");\n    setIsError(false);\n    setIsIdle(true);\n  };\n\n  const handleNoResults = () => {\n    return (\n      <Alert\n        action={\n          <Button onClick={resetDatabase} color=\"inherit\" size=\"small\">\n            RELOAD\n          </Button>\n        }\n        severity=\"error\"\n      >\n        Repository not found, please press the button to the right and try\n        another repository.\n      </Alert>\n    );\n  };\n  const isIdle = isLoading || isError;\n  return (\n    <>\n      <Navbar getReposByOrganization={getReposByOrganization} isIdle={isIdle} />\n      {isError && handleNoResults()}\n      <RepositoryInfomation repositories={repos} isIdle={isIdle} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,oBAAoB,MAAM,6BAA6B;AAC9D,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,sBAAsB,GAAG,MAAOC,gBAAgB,IAAK;IACzDC,SAAS,CAAC,IAAI,CAAC;IACf,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC7B,+BAA8BH,gBAAiB,QAAO,CACxD;MACDC,SAAS,CAAC,KAAK,CAAC;MAChB,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3BR,QAAQ,CAACM,QAAQ,CAACG,IAAI,CAAC;QACvBJ,SAAS,CAAC,KAAK,CAAC;MAClB,CAAC,MAAM;QACLH,UAAU,CAAC,IAAI,CAAC;QAChB,OAAO,EAAE;MACX;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdR,UAAU,CAAC,IAAI,CAAC;MAChBG,SAAS,CAAC,IAAI,CAAC;IACjB;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMY,sBAAsB,CAAC,SAAS,CAAC;IACzC,CAAC,GAAG;IACJ,OAAO,MAAM,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,aAAa,GAAG,YAAY;IAChC,MAAMR,sBAAsB,CAAC,SAAS,CAAC;IACvCD,UAAU,CAAC,KAAK,CAAC;IACjBG,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,MAAMO,eAAe,GAAG,MAAM;IAC5B,oBACE,QAAC,KAAK;MACJ,MAAM,eACJ,QAAC,MAAM;QAAC,OAAO,EAAED,aAAc;QAAC,KAAK,EAAC,SAAS;QAAC,IAAI,EAAC,OAAO;QAAA,UAAC;MAE7D;QAAA;QAAA;QAAA;MAAA,QACD;MACD,QAAQ,EAAC,OAAO;MAAA,UACjB;IAGD;MAAA;MAAA;MAAA;IAAA,QAAQ;EAEZ,CAAC;EACD,MAAME,MAAM,GAAGC,SAAS,IAAIb,OAAO;EACnC,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,sBAAsB,EAAEE,sBAAuB;MAAC,MAAM,EAAEU;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,EACzEZ,OAAO,IAAIW,eAAe,EAAE,eAC7B,QAAC,oBAAoB;MAAC,YAAY,EAAEb,KAAM;MAAC,MAAM,EAAEc;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAC5D;AAEP;AAAC,GA5DQf,GAAG;AAAA,KAAHA,GAAG;AA8DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}