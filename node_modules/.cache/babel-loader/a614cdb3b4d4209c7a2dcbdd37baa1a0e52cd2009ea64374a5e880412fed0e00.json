{"ast":null,"code":"var _jsxFileName = \"/Users/timothyjackreece/Desktop/fold/reposearcher/src/components/RepositoryInfo/Card/Back.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent, Typography } from \"@mui/material\";\nimport { Table, TableBody, TableContainer, TableHead, Paper, TableCell, TableRow } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Back(_ref) {\n  _s();\n  let {\n    handleflip,\n    name,\n    fullName\n  } = _ref;\n  const [commitData, setCommitData] = useState([]);\n  const [isError, setIsError] = useState(false);\n  const getCommitsForRepo = async name => {\n    try {\n      const url = `https://api.github.com/repos/${name}/commits`;\n      const response = await axios.get(url);\n      if (response.status === 200) {\n        const formattedCommitData = response.data.map(data => {\n          var _data$author;\n          return {\n            Title: data.commit.message,\n            Username: ((_data$author = data.author) === null || _data$author === void 0 ? void 0 : _data$author.login) || data.commit.author.name,\n            Hash: data.sha,\n            DateCreated: new Date(data.commit.author.date).toLocaleString()\n          };\n        });\n        setCommitData(formattedCommitData);\n      } else {\n        setIsError(true);\n      }\n    } catch (error) {\n      setIsError(true);\n    }\n  };\n  useEffect(() => {\n    (async () => {\n      await getCommitsForRepo(fullName);\n    })();\n    return () => {};\n  }, [fullName]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card-container\",\n    sx: {\n      overflow: \"auto\",\n      height: \"auto\"\n    },\n    onClick: handleflip,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"div\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"-Commit Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), isError ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No commit data found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          className: \"commit-table\",\n          children: [renderTableHeader(), renderTableBody(commitData)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Back, \"fX2z8VUp8feNroxNskIOFnAG5KI=\");\n_c = Back;\nfunction getTableCellStyle(index) {\n  return index === 0 ? {\n    fontWeight: \"bold\"\n  } : {\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  };\n}\nexport const renderTableHeader = () => {\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [\"Title\", \"Username\", \"Hash\", \"Date Created\"].map((head, i) => {\n        return /*#__PURE__*/_jsxDEV(TableCell, {\n          sx: getTableCellStyle(i),\n          children: head\n        }, head + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\nexport const renderTableBody = data => {\n  return data.map((el, i) => {\n    return /*#__PURE__*/_jsxDEV(TableBody, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: Object.keys(el).map((commit, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n          align: i === 0 ? \"left\" : \"center\",\n          scope: \"row\",\n          children: commit === \"DateCreated\" ? new Date(el[commit]).toLocaleString() : el[commit]\n        }, el[commit], false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, el.Title + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"Back\");","map":{"version":3,"names":["React","axios","Card","CardContent","Typography","Table","TableBody","TableContainer","TableHead","Paper","TableCell","TableRow","useEffect","useState","Back","handleflip","name","fullName","commitData","setCommitData","isError","setIsError","getCommitsForRepo","url","response","get","status","formattedCommitData","data","map","Title","commit","message","Username","author","login","Hash","sha","DateCreated","Date","date","toLocaleString","error","overflow","height","renderTableHeader","renderTableBody","getTableCellStyle","index","fontWeight","textAlign","head","i","el","Object","keys"],"sources":["/Users/timothyjackreece/Desktop/fold/reposearcher/src/components/RepositoryInfo/Card/Back.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent, Typography } from \"@mui/material\";\nimport {\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  Paper,\n  TableCell,\n  TableRow,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Back({ handleflip, name, fullName }) {\n  const [commitData, setCommitData] = useState([]);\n  const [isError, setIsError] = useState(false);\n\n  const getCommitsForRepo = async (name) => {\n    try {\n      const url = `https://api.github.com/repos/${name}/commits`;\n      const response = await axios.get(url);\n      if (response.status === 200) {\n        const formattedCommitData = response.data.map((data) => ({\n          Title: data.commit.message,\n          Username: data.author?.login || data.commit.author.name,\n          Hash: data.sha,\n          DateCreated: new Date(data.commit.author.date).toLocaleString(),\n        }));\n        setCommitData(formattedCommitData);\n      } else {\n        setIsError(true);\n      }\n    } catch (error) {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      await getCommitsForRepo(fullName);\n    })();\n    return () => {};\n  }, [fullName]);\n\n  return (\n    <Card\n      key={name}\n      className=\"card-container\"\n      sx={{ overflow: \"auto\", height: \"auto\" }}\n      onClick={handleflip}\n    >\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {name}\n        </Typography>\n        <p>{\"-Commit Log\"}</p>\n        {isError ? (\n          <h1>No commit data found</h1>\n        ) : (\n          <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\" className=\"commit-table\">\n              {renderTableHeader()}\n              {renderTableBody(commitData)}\n            </Table>\n          </TableContainer>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction getTableCellStyle(index) {\n  return index === 0\n    ? {\n        fontWeight: \"bold\",\n      }\n    : {\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n      };\n}\n\nexport const renderTableHeader = () => {\n  return (\n    <TableHead>\n      <TableRow>\n        {[\"Title\", \"Username\", \"Hash\", \"Date Created\"].map((head, i) => {\n          return (\n            <TableCell key={head + i} sx={getTableCellStyle(i)}>\n              {head}\n            </TableCell>\n          );\n        })}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport const renderTableBody = (data) => {\n  return data.map((el, i) => {\n    return (\n      <TableBody>\n        <TableRow key={el.Title + i}>\n          {Object.keys(el).map((commit, i) => (\n            <TableCell\n              key={el[commit]}\n              align={i === 0 ? \"left\" : \"center\"}\n              scope=\"row\"\n            >\n              {commit === \"DateCreated\"\n                ? new Date(el[commit]).toLocaleString()\n                : el[commit]}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableBody>\n    );\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}