{"ast":null,"code":"var _jsxFileName = \"/Users/timothyjackreece/Desktop/fold/reposearcher/src/components/RepositoryInfo/Card/Back.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// import CommitTable from \"../../Table/CommitTable\";\nimport { Card, CardContent, Box, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { FrontDetails } from \"../../utility/DataGenerator\";\nimport { getCommits } from \"../../controller/controller\";\nimport axios from \"axios\";\nimport { Table, TableBody, TableContainer, TableHead, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Back(_ref) {\n  _s();\n  let {\n    handleflip,\n    name,\n    fullName\n  } = _ref;\n  const [commitData, setCommitData] = useState([]);\n  const getCommitsForRepo = async name => {\n    try {\n      const url = `https://api.github.com/repos/${name}/commits`;\n      const response = await axios.get(url);\n      if (response.status === 200) {\n        const formattedCommitData = response.data.map(data => {\n          console.log(\"data\", data);\n          // ({\n          //   Title: data.commit.message,\n          //   Username: author?.login || commit.author.name,\n          //   Hash: sha,\n          //   DateCreated: new Date(commit.author.date).toLocaleString(),\n          // })\n        });\n\n        setCommitData(response.data);\n      } else {\n        return [];\n      }\n    } catch (error) {}\n  };\n  useEffect(() => {\n    (async () => {\n      await getCommitsForRepo(fullName);\n    })();\n    return () => {};\n  }, [fullName]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card-container\",\n    sx: {\n      overflow: \"auto\",\n      height: \"auto\"\n    },\n    onClick: handleflip,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"div\",\n        children: [name, \" - Commit Log\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          className: \"commit-table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Back, \"Sbu8EpTe/vaEpI9liYbwIrEeQ9Q=\");\n_c = Back;\nvar _c;\n$RefreshReg$(_c, \"Back\");","map":{"version":3,"names":["React","Card","CardContent","Box","Typography","useEffect","useState","FrontDetails","getCommits","axios","Table","TableBody","TableContainer","TableHead","Paper","Back","handleflip","name","fullName","commitData","setCommitData","getCommitsForRepo","url","response","get","status","formattedCommitData","data","map","console","log","error","overflow","height"],"sources":["/Users/timothyjackreece/Desktop/fold/reposearcher/src/components/RepositoryInfo/Card/Back.js"],"sourcesContent":["import React from \"react\";\n// import CommitTable from \"../../Table/CommitTable\";\nimport { Card, CardContent, Box, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { FrontDetails } from \"../../utility/DataGenerator\";\nimport { getCommits } from \"../../controller/controller\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  Paper,\n} from \"@mui/material\";\n\nexport default function Back({ handleflip, name, fullName }) {\n  const [commitData, setCommitData] = useState([]);\n\n  const getCommitsForRepo = async (name) => {\n    try {\n      const url = `https://api.github.com/repos/${name}/commits`;\n      const response = await axios.get(url);\n      if (response.status === 200) {\n        const formattedCommitData = response.data.map((data) => {\n          console.log(\"data\", data);\n          // ({\n          //   Title: data.commit.message,\n          //   Username: author?.login || commit.author.name,\n          //   Hash: sha,\n          //   DateCreated: new Date(commit.author.date).toLocaleString(),\n          // })\n        });\n        setCommitData(response.data);\n      } else {\n        return [];\n      }\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    (async () => {\n      await getCommitsForRepo(fullName);\n    })();\n    return () => {};\n  }, [fullName]);\n\n  return (\n    <Card\n      key={name}\n      className=\"card-container\"\n      sx={{ overflow: \"auto\", height: \"auto\" }}\n      onClick={handleflip}\n    >\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {name} - Commit Log\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"simple table\" className=\"commit-table\">\n            {/* <TableHead>{headerGenerator(headers)}</TableHead>\n            <TableBody>{rowGenerator(data)}</TableBody> */}\n          </Table>\n        </TableContainer>{\" \"}\n      </CardContent>\n    </Card>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,IAAI,EAAEC,WAAW,EAAEC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAClE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,EACLC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,KAAK,QACA,eAAe;AAAC;AAEvB,eAAe,SAASC,IAAI,OAAiC;EAAA;EAAA,IAAhC;IAAEC,UAAU;IAAEC,IAAI;IAAEC;EAAS,CAAC;EACzD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMe,iBAAiB,GAAG,MAAOJ,IAAI,IAAK;IACxC,IAAI;MACF,MAAMK,GAAG,GAAI,gCAA+BL,IAAK,UAAS;MAC1D,MAAMM,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAACF,GAAG,CAAC;MACrC,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,mBAAmB,GAAGH,QAAQ,CAACI,IAAI,CAACC,GAAG,CAAED,IAAI,IAAK;UACtDE,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,IAAI,CAAC;UACzB;UACA;UACA;UACA;UACA;UACA;QACF,CAAC,CAAC;;QACFP,aAAa,CAACG,QAAQ,CAACI,IAAI,CAAC;MAC9B,CAAC,MAAM;QACL,OAAO,EAAE;MACX;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE,CAAC;EACnB,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMgB,iBAAiB,CAACH,QAAQ,CAAC;IACnC,CAAC,GAAG;IACJ,OAAO,MAAM,CAAC,CAAC;EACjB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACE,QAAC,IAAI;IAEH,SAAS,EAAC,gBAAgB;IAC1B,EAAE,EAAE;MAAEc,QAAQ,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IACzC,OAAO,EAAEjB,UAAW;IAAA,uBAEpB,QAAC,WAAW;MAAA,wBACV,QAAC,UAAU;QAAC,YAAY;QAAC,OAAO,EAAC,IAAI;QAAC,SAAS,EAAC,KAAK;QAAA,WAClDC,IAAI,EAAC,eACR;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACb,QAAC,cAAc;QAAC,SAAS,EAAEH,KAAM;QAAA,uBAC/B,QAAC,KAAK;UAAC,cAAW,cAAc;UAAC,SAAS,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA;MAGjD;QAAA;QAAA;QAAA;MAAA,QACO,EAAC,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACT,GAfTG,IAAI;IAAA;IAAA;IAAA;EAAA,QAgBJ;AAEX;AAAC,GAnDuBF,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}